import pandas as pd
import matplotlib.pyplot as plt
import re
from datetime import datetime
from datetime import time

talk = open("C:\\Users\\jooye\\OneDrive\\바탕 화면\\Career stuff\\Python\\fun stuff\\kakaotalk3.txt", "rt", encoding = "utf-8")
talklist = talk.readlines()
talk.close()
# print(talklist[0:10])
# print(len(talklist))

# 메시지 구분용 엔터와 문장 안에서의 엔터 구분하기
talklist[0] = talklist[0].replace("\ufeff", "")
realtalk = []
for item in talklist:
    if re.match(r"\d\d\d\d년 \d*월 \d*일", item):
        realtalk.append(item)
    else:
        realtalk[-1] += item
# 예스예스 ~ 성공!! 이제 문장 안에서의 엔터는 지우자. 그냥 \n을 지우면 된당
def cleaner(string):
    new = string.replace("\n", " ")
    new = new.strip()
    return new
realtalk = [cleaner(k) for k in realtalk]
# print(realtalk[0:10])

# 굳굳~~~~ 이제 날짜랑 시간이랑 보낸사람, 보낸 메시지 내용을 찾아내자
who = []
when = []
what = []
for i in range(len(realtalk)):
    string = realtalk[i]
    dt = string.split(",")[0]
    sender = string.split(" :")[0].split(", ")[-1]
    itemlist = string.split(" : ")[1:]
    item = ' : '.join(itemlist)
    what.append(item)
    when.append(dt)
    who.append(sender)
talkdf = pd.DataFrame({"who" : who, "when" : when, "what": what})
talkdf["who"] = talkdf.who.apply(lambda x: "BF" if x == "회원님" else "GF")

# 누가 더 자주 말했는지 알아보자
# print(talkdf.who.value_counts(normalize = True))


# 이제 when을 datetime으로 만들어서 분석을 용이하게 하자
talkdf["when"] = talkdf.when.apply(lambda x: x.replace("오후", "PM") if "오후" in x else x.replace("오전", "AM"))
talkdf["datetime"] = talkdf.when.apply(lambda x: datetime.strptime(x, "%Y년 %m월 %d일 %p %I:%M"))
talkdf["date"] = [x.date() for x in talkdf.datetime]
talkdf["hour"] = [x.hour for x in talkdf.datetime]
talkdf = talkdf.drop("when", axis = 1)
repint = [None]
for k in range(len(realtalk)-1):
    if talkdf.who[k] == talkdf.who[k+1]:
        repint.append(None)
    else:
        repint.append((talkdf.datetime[k+1] - talkdf.datetime[k]).seconds/60)
talkdf["reply_interval"] = repint
# 답장 간격도 알 수 있게 되었다. 누가 더 칼답하는지 알 수 있고 평균 답장 속도가 어느정도인지도 계산 가능!

# 누가 "보고싶다"는 표현을 더 많이 하는지 알아보자
# 얌전히 "보고싶다"라고 하지 않는다. "보~~~고~~싶당~~~~"이런 식으로 변형해서 말하기 때문에, 최대한 많은 "보고싶다"의 variation을 포함할 수 있는 regex 필요
missyou = re.compile("보~*고~*[싶시파팡]|ㅂㄱㅅㅇ")
def count_missyou(sentence):
    miss = re.findall(missyou, sentence)
    return len(miss)

talkdf['missyou'] = [count_missyou(x) for x in talkdf.what]
themoment = datetime(yyyy, mm, dd, h, m, s) # 사귄 날짜와 시간 저장
lovers_talkdf = talkdf.loc[talkdf.datetime > datetime(2019, 11, 5, 22, 00, 00)] # 사귀고 난 이후의 대화내용을 subset
# print(lovers_talkdf.head(10))

gfdf = talkdf.loc[talkdf.who == "GF"]
lv_gfdf = bfdf.loc[bfdf.datetime > themoment]
bfdf = talkdf.loc[talkdf.who == "BF"]
lv_bfdf = bfdf.loc[bfdf.datetime > themoment]
# 이건 사귀기 전후에 대화 양상이 많이 바뀌었는지 확인하기 위해서 만들어 둔 것 같다 ㅋㅋㅋ

# # days = gfdf.date.unique()
# # gf_mean_interval = gfdf.groupby("date").reply_interval.mean()
# # bf_mean_interval = bfdf.groupby("date").reply_interval.mean()

# 한글 폰트 가져오기 ---------------------------------------
import matplotlib
import matplotlib.font_manager as fm
font_location = "C:\\WINDOWS\\FONTS\\MALGUNSL.ttf"
font_name = fm.FontProperties(fname = font_location).get_name()
matplotlib.rc("font", family = font_name)
# --------------------------------------------------------------------

plt.plot(sorted(lv_gfdf.hour.unique()), lv_gfdf.groupby("hour").missyou.sum(), color = "palevioletred")
plt.plot(sorted(lv_bfdf.hour.unique()), lv_bfdf.groupby("hour").missyou.sum(), color = "turquoise")
plt.legend(["GF", "BF"])
plt.xlabel("시간")
plt.ylabel("빈도")
plt.title("시간별 우리의 수다 중 보고싶다는 표현의 횟수")
plt.show()

# plt.plot(days, gf_mean_interval, color = "palevioletred")
# plt.plot(days, bf_mean_interval, color = "turquoise")
# plt.legend(["GF", "BF"])
# plt.title("일별 평균 답장텀")
# plt.xlabel("날짜")
# plt.ylabel("답장텀 (분 단위)")
# plt.show()

## 연인간 사용하면 재미있는 코드 ㅋㅋ 누가 답장을 느리게 하는지, 애정표현은 누가 많이 하는지 등등 찾아볼 수 있다. 
## 조금 수정하면 이모티콘을 누가 많이 쓰는지 같은 다른 요소도 찾아볼 수 있다
